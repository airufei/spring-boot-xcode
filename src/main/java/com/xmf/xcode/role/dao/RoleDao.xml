<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xmf.xcode.role.dao.RoleDao">

    <sql id="jobRoleColumns">
	   str_to_date(a.CREATE_TIME, '%Y-%m-%d %H:%i:%s') AS "createTimestr",
	   str_to_date(a.UPDATE_TIME, '%Y-%m-%d %H:%i:%s') AS "updateTimestr",
		a.id AS "id",
		a.name AS "name",
		a.role_code as "roleCode",
		a.create_time AS "createTime",
		a.update_time AS "updateTime",
		a.flag AS "flag",
		a.remark AS "remark"
	</sql>

    <sql id="jobRoleJoins">
    </sql>

    <select id="getRoleById" resultType="com.xmf.xcode.role.model.Role">
        SELECT
        <include refid="jobRoleColumns"/>
        FROM x_code_role a
        <include refid="jobRoleJoins"/>
        WHERE flag=#{flag} and a.id = #{id}
    </select>

    <select id="getTotalCount" resultType="Integer" parameterType="com.alibaba.fastjson.JSONObject">
        SELECT
        count(*) as count
        FROM x_code_role a
        <include refid="jobRoleJoins"/>
        <where>
            flag=#{flag}
            <if test="name != null and name != ''">
                AND a.name = #{name}
            </if>
            <if test="roleCode != null and roleCode != ''">
                AND a.role_code = #{roleCode}
            </if>
        </where>
    </select>

    <select id="getList" resultType="com.xmf.xcode.role.model.Role"
            parameterType="com.alibaba.fastjson.JSONObject">
        SELECT
        <include refid="jobRoleColumns"/>
        FROM
        (SELECT id from x_code_role t
        <where>
            flag=#{flag}
            <if test="name != null and name != ''">
                AND t.name = #{name}
            </if>
            <if test="roleCode != null and roleCode != ''">
                AND t.role_code = #{roleCode}
            </if>
        </where>
        limit #{startIndex},#{pageSize}) b inner join
        x_code_role a on b.id=a.id
        <choose>
            <otherwise>
                ORDER BY update_time desc
            </otherwise>
        </choose>
    </select>

    <select id="getRoleList" resultType="com.xmf.xcode.role.model.Role"
            parameterType="com.xmf.xcode.role.model.Role">
        SELECT
        <include refid="jobRoleColumns"/>
        FROM (SELECT id from x_code_role t
        <where>
            flag=#{flag}
            <if test="name != null and name != ''">
                AND t.name = #{name}
            </if>
            <if test="roleCode != null and roleCode != ''">
                AND t.role_code = #{roleCode}
            </if>
        </where>
        ) b inner join x_code_role a on b.id=a.id
        <choose>
            <otherwise>
                ORDER BY update_time desc
            </otherwise>
        </choose>
    </select>

    <select id="getSignleRole" resultType="com.xmf.xcode.role.model.Role"
            parameterType="com.xmf.xcode.role.model.Role">
        SELECT
        <include refid="jobRoleColumns"/>
        FROM
        x_code_role a
        <where>
            flag=#{flag}
            <if test="name != null and name != ''">
                AND a.name = #{name}
            </if>
            <if test="roleCode != null and roleCode != ''">
                AND a.role_code = #{roleCode}
            </if>
        </where>
        limit 1
    </select>


    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        <selectKey resultType="long" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        INSERT INTO x_code_role(
        <if test="id != null and id != ''">
            id,
        </if>
        <if test="name != null and name != ''">
            name,
        </if>
        <if test="updateTime != null ">
            update_time,
        </if>
        <if test="flag != null and flag != ''">
            flag,
        </if>
        <if test="remark != null and remark != ''">
            remark,
        </if>
        <if test="roleCode != null and roleCode != ''">
            role_code,
        </if>
        create_time
        ) VALUES (
        <if test="id != null and id != ''">
            #{id},
        </if>
        <if test="name != null and name != ''">
            #{name},
        </if>
        <if test="updateTime != null ">
            #{updateTime},
        </if>
        <if test="flag != null and flag != ''">
            #{flag},
        </if>
        <if test="remark != null and remark != ''">
            #{remark},
        </if>
        <if test="roleCode != null and roleCode != ''">
            #{roleCode},
        </if>
        #{createTime}
        )
    </insert>


    <update id="updateById">
        UPDATE x_code_role SET
        <if test="name != null and name != ''">
            name = #{name},
        </if>
        <if test="roleCode != null and roleCode != ''">
            role_code= #{roleCode},
        </if>
        <if test="flag != null and flag != ''">
            flag = #{flag},
        </if>
        <if test="remark != null and remark != ''">
            remark = #{remark},
        </if>
        update_time = #{updateTime}
        WHERE id = #{id}
    </update>

    <update id="delete">
	UPDATE x_code_role SET
	flag = -1
		WHERE id = #{id}
	</update>
</mapper>