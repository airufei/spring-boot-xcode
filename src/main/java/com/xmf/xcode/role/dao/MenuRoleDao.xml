<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xmf.xcode.role.dao.MenuRoleDao">

    <sql id="jobMenuRoleColumns">
	   str_to_date(a.CREATE_TIME, '%Y-%m-%d %H:%i:%s') AS "createTimestr",
	   str_to_date(a.UPDATE_TIME, '%Y-%m-%d %H:%i:%s') AS "updateTimestr",
		a.id AS "id",
		a.role_id AS "roleId",
		a.role_code as "roleCode",
		a.menu_id AS "menuId",
		a.create_time AS "createTime",
		a.update_time AS "updateTime",
		a.flag AS "flag",
		a.remark AS "remark"
	</sql>

    <sql id="jobMenuRoleJoins">
    </sql>

    <select id="getMenuRoleById" resultType="com.xmf.xcode.role.model.MenuRole">
        SELECT
        <include refid="jobMenuRoleColumns"/>
        FROM x_code_menu_role a
        <include refid="jobMenuRoleJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="getTotalCount" resultType="Integer" parameterType="com.alibaba.fastjson.JSONObject">
        SELECT
        count(*) as count
        FROM x_code_menu_role a
        <include refid="jobMenuRoleJoins"/>
        <where>
            flag=#{flag}
            <if test="roleId != null and roleId != ''">
                AND a.role_id = #{roleId}
            </if>
            <if test="menuId != null and menuId != ''">
                AND a.menu_id = #{menuId}
            </if>
            <if test="roleCode != null and roleCode != ''">
                role_code= #{roleCode},
            </if>
        </where>
    </select>

    <select id="getList" resultType="com.xmf.xcode.role.model.MenuRole"
            parameterType="com.alibaba.fastjson.JSONObject">
        SELECT
        <include refid="jobMenuRoleColumns"/>
        FROM
        (SELECT id from x_code_menu_role t
        <where>
            flag=#{flag}
            <if test="roleId != null and roleId != ''">
                AND t.role_id = #{roleId}
            </if>
            <if test="menuId != null and menuId != ''">
                AND t.menu_id = #{menuId}
            </if>
            <if test="roleCode != null and roleCode != ''">
                role_code= #{roleCode},
            </if>
        </where>
        limit #{startIndex},#{pageSize}) b inner join
        x_code_menu_role a on b.id=a.id
        <choose>
            <otherwise>
                ORDER BY update_time desc
            </otherwise>
        </choose>
    </select>

    <select id="getMenuRoleList" resultType="com.xmf.xcode.role.model.MenuRole"
            parameterType="com.xmf.xcode.role.model.MenuRole">
        SELECT
        <include refid="jobMenuRoleColumns"/>
        FROM (SELECT id from x_code_menu_role t
        <where>
            flag=#{flag}
            <if test="roleId != null and roleId != ''">
                AND t.role_id = #{roleId}
            </if>
            <if test="menuId != null and menuId != ''">
                AND t.menu_id = #{menuId}
            </if>
            <if test="roleCode != null and roleCode != ''">
                role_code= #{roleCode},
            </if>
        </where>
        ) b inner join x_code_menu_role a on b.id=a.id
        <choose>
            <otherwise>
                ORDER BY update_time desc
            </otherwise>
        </choose>
    </select>

    <select id="getSignleMenuRole" resultType="com.xmf.xcode.role.model.MenuRole"
            parameterType="com.xmf.xcode.role.model.MenuRole">
        SELECT
        <include refid="jobMenuRoleColumns"/>
        FROM
        x_code_menu_role a
        <where>
            flag=#{flag}
            <if test="roleId != null and roleId != ''">
                AND a.role_id = #{roleId}
            </if>
            <if test="menuId != null and menuId != ''">
                AND a.menu_id = #{menuId}
            </if>
            <if test="roleCode != null and roleCode != ''">
                role_code= #{roleCode},
            </if>
        </where>
        limit 1
    </select>


    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        <selectKey resultType="long" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        INSERT INTO x_code_menu_role(
        <if test="id != null and id != ''">
            id,
        </if>
        <if test="roleId != null and roleId != ''">
            role_id,
        </if>
        <if test="menuId != null and menuId != ''">
            menu_id,
        </if>
        <if test="updateTime != null ">
            update_time,
        </if>
        <if test="flag != null and flag != ''">
            flag,
        </if>
        <if test="remark != null and remark != ''">
            remark,
        </if>
        <if test="roleCode != null and roleCode != ''">
            role_code,
        </if>
        create_time
        ) VALUES (
        <if test="id != null and id != ''">
            #{id},
        </if>
        <if test="roleId != null and roleId != ''">
            #{roleId},
        </if>
        <if test="menuId != null and menuId != ''">
            #{menuId},
        </if>
        <if test="updateTime != null ">
            #{updateTime},
        </if>
        <if test="flag != null and flag != ''">
            #{flag},
        </if>
        <if test="remark != null and remark != ''">
            #{remark},
        </if>
        <if test="roleCode != null and roleCode != ''">
            #{roleCode},
        </if>
        #{createTime}
        )
    </insert>

    <insert id="addTrainRecordBatch" useGeneratedKeys="true" parameterType="java.util.List">
        <selectKey resultType="long" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        INSERT INTO x_code_menu_role(
        id,
        role_Id,
        menu_Id,
        update_time,
        flag,
        remark,
        role_code,
        create_time
        ) VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id},
            #{item.roleId},
            #{item.menuId},
            #{item.updateTime},
            #{item.flag},
            #{item.remark},
            #{item.roleCode},
            #{item.createTime}
            )
        </foreach>
    </insert>

    <update id="updateById">
        UPDATE x_code_menu_role SET
        <if test="roleId != null and roleId != ''">
            role_id = #{roleId},
        </if>
        <if test="menuId != null and menuId != ''">
            menu_id = #{menuId},
        </if>
        <if test="flag != null and flag != ''">
            flag = #{flag},
        </if>
        <if test="remark != null and remark != ''">
            remark = #{remark},
        </if>
        <if test="roleCode != null and roleCode != ''">
            role_code=#{roleCode},
        </if>
        update_time = #{updateTime}
        WHERE id = #{id}
    </update>

    <update id="delete">
	delete  from x_code_menu_role
		WHERE role_id = #{roleId}
	</update>
</mapper>