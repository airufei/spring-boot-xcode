<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>entity</name>
	<filePath>src/${packageName}/model/${javaModuleName}</filePath>
	<fileName>${ClassName}.java</fileName>
	<content><![CDATA[

package ${packageName}.model.${javaModuleName};
import ${packageName}.base.model.BaseEntitys;
import org.apache.commons.lang3.builder.ToStringBuilder;
 /**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
public class ${ClassName} extends BaseEntitys {
	
	private static final long serialVersionUID = 1L;
	<#-- 生成字段属性 -->
	<#list colList as c>
		<#-- 如果不是基类属性 -->
		<#if c.isNotBaseField>
	/**
	*  <#if c.comments??> ${c.comments}</#if>
	*/
	private ${c.simpleJavaType} ${c.simpleJavaField};
			
		</#if>
	</#list>
	<#-- 范围条件字段 -->
	<#list colList as c>
		<#if c.isQuery?? && c.isQuery == "1" && c.queryType == "between">
	private ${c.simpleJavaType} begin${c.simpleJavaField?cap_first};		<#if c.comments??>// 开始 ${c.comments}</#if>
	private ${c.simpleJavaType} end${c.simpleJavaField?cap_first};		<#if c.comments??>// 结束 ${c.comments}</#if>
		</#if>
	</#list>
	
	
	<#-- 构造方法 -->
	public ${ClassName}() {
		
	}

	<#list colList as c>
	</#list>

	<#-- 生成get和set方法 -->
	<#list colList as c>
		<#-- 如果不是基类属性 -->
		<#if c.isNotBaseField>
			
         public ${c.simpleJavaType} get${c.simpleJavaField?cap_first}() {
		return ${c.simpleJavaField};
	}

	public void set${c.simpleJavaField?cap_first}(${c.simpleJavaType} ${c.simpleJavaField}) {
		this.${c.simpleJavaField} = ${c.simpleJavaField};
	}
		</#if>
	</#list>
	<#-- 范围条件字段get和set方法 -->
	<#list colList as c>
		<#if c.isQuery?? && c.isQuery == "1" && c.queryType == "between">
	public ${c.simpleJavaType} getBegin${c.simpleJavaField?cap_first}() {
		return begin${c.simpleJavaField?cap_first};
	}

	public void setBegin${c.simpleJavaField?cap_first}(${c.simpleJavaType} begin${c.simpleJavaField?cap_first}) {
		this.begin${c.simpleJavaField?cap_first} = begin${c.simpleJavaField?cap_first};
	}
	
	public ${c.simpleJavaType} getEnd${c.simpleJavaField?cap_first}() {
		return end${c.simpleJavaField?cap_first};
	}

	public void setEnd${c.simpleJavaField?cap_first}(${c.simpleJavaType} end${c.simpleJavaField?cap_first}) {
		this.end${c.simpleJavaField?cap_first} = end${c.simpleJavaField?cap_first};
	}
		
		</#if>
	</#list>

	@Override
	public String toString() {
		return new ToStringBuilder(this)
		<#list colList as c>
		<#if c.isNotBaseField>
		 .append("${c.simpleJavaField}",  ${c.simpleJavaField})
		</#if>
	   </#list>
		.toString();
	}
}]]>
	</content>
</template>